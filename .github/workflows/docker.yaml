name: Docker Multi-Arch Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag (e.g., v1.2.3)'
        required: true
        default: 'manual-latest'

permissions:
  contents: read
  packages: write

jobs:
  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Aliyun Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ALI_REGISTRY }}
          username: ${{ secrets.ALI_USERNAME }}
          password: ${{ secrets.ALI_PASSWORD }}

      - name: Normalize image tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
          else
            REF=${GITHUB_REF##*/}
            SAFE_TAG=$(echo "$REF" | sed 's#[^a-zA-Z0-9_.-]#-#g')
            echo "TAG=$SAFE_TAG" >> $GITHUB_ENV
          fi

      - name: Build and push multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/stickerdownloader:${{ env.TAG }}
            ghcr.io/${{ github.repository_owner }}/stickerdownloader:${{ env.TAG }}
            ${{ secrets.ALI_REGISTRY }}/${{ secrets.ALI_USERNAME }}/stickerdownloader:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max